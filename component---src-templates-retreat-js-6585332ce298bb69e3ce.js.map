{"version":3,"sources":["webpack:///./src/components/tripleTextColumn.js","webpack:///./src/templates/retreat.js"],"names":["TripleTextColumn","props","content","title","images","Fragment","map","image","fluid","renderImages","column","documentToReactComponents","json","renderColumns","renderContent","monthNames","Retreat","render","this","data","retreat","contentfulRetreat","startDate","Date","getDate","endDate","startMonth","getMonth","endMonth","year","getFullYear","photos","photo","style","height","renderPhotos","tripleTextColumns","column1","column2","column3","renderTripleTextColumns","singleTextColumn","renderSingleTextColumns","React","Component","pageQuery"],"mappings":"4FAAA,sEA8DeA,IAzDU,SAAAC,GAAU,IACzBC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACzB,IAAKF,EAAS,OAAO,KAkDrB,OAdsB,SAACA,EAASE,GAC/B,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,IAAD,KACC,4BAAKF,IAEN,kBAAC,IAAD,KAxCkB,SAAAC,GACpB,OAAKA,EAIHA,EAAOE,KAAI,SAAAC,GACV,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,MAAOD,EAAMC,YANf,KAuCJC,CAAaL,GAzBI,SAAAF,GACrB,GAAKA,EAEE,CAEN,OACCA,EAAQI,KAAI,SAAAI,GAEX,OACC,kBAAC,IAAD,KACEC,oCAA0BD,EAAOE,UARtC,OAAO,KAwBJC,CAAcX,KAOlBY,CAAcZ,EAASE,K,yMCjDzB,IAAMW,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE5HC,E,gLACJC,OAAA,WACmBC,KAAKjB,MAAdkB,KADA,IAEFC,EAAUF,KAAKjB,MAAMkB,KAAKE,kBAC1BC,EAAY,IAAIC,KAAKH,EAAQE,WAAWE,UACxCC,EAAU,IAAIF,KAAKH,EAAQK,SAASD,UACpCE,EAAaX,EAAW,IAAIQ,KAAKH,EAAQE,WAAWK,YACpDC,EAAWb,EAAW,IAAIQ,KAAKH,EAAQK,SAASE,YAChDE,EAAO,IAAIN,KAAKH,EAAQE,WAAWQ,cAmCzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3B,MAAM,YACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKiB,EAAQjB,QAtCA,SAAAiB,GACnB,OAAKA,EAAQW,OAEX,kBAAC,IAAD,KACGX,EAAQW,OAAOzB,KAAI,SAAA0B,GAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,CAAEC,OAAQ,SAAW1B,MAAOwB,EAAMxB,aAN5B,KAuCvB2B,CAAaf,GACd,kBAAC,IAAD,KACE,4BAAKE,EAAL,IAAiBI,EAAjB,MAAgCD,EAAhC,IAA0CG,EAA1C,IAAqDC,IAEvD,kBAAC,IAAD,KA7B0B,SAAAT,GAC9B,OAAKA,EAAQgB,kBAEXhB,EAAQgB,kBAAkB9B,KAAI,SAAAI,GAAM,OAAI,kBAAC,IAAD,CAAkBR,QAAS,CAACQ,EAAO2B,QAAS3B,EAAO4B,QAAS5B,EAAO6B,SAAUpC,MAAOO,EAAOP,WAF9F,KA6BhCqC,CAAwBpB,GAvBD,SAAAA,GAC9B,OAAKA,EAAQqB,iBAEXrB,EAAQqB,iBAAiBnC,KAAI,SAAAI,GAC3B,OACI,kBAAC,IAAD,CAAkBR,QAASQ,EAAOR,QAAQU,KAAMT,MAAOO,EAAOP,MAAOI,MAAOG,EAAOH,WAJrD,KAuB/BmC,CAAwBtB,O,GAxDfuB,IAAMC,WAgEb5B,YAER,IAAM6B,EAAS","file":"component---src-templates-retreat-js-6585332ce298bb69e3ce.js","sourcesContent":["import React from \"react\"\nimport { FlexContainer, FlexItem, TripleColumnText, VerticalSpace, InnerContainer } from '../styled-components/layout'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport Img from \"gatsby-image\"\n\nconst TripleTextColumn = props => {\n \tconst { content, title, images } = props\n\tif (!content) return null\n\n\tconst renderImages = images => {\n\t\tif (!images ) {\n\t\t\treturn null\n\t\t} else {\n\t\t\treturn (\n\t\t\t\timages.map(image => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t<Img fluid={image.fluid} />\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tconst renderColumns = content => {\n\t\tif (!content) {\n\t\t\treturn null\n\t\t} else {\n\t\t\tlet n = 0\n\t\t\treturn (\n\t\t\t\tcontent.map(column => {\n\t\t\t\t\tn++\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t{documentToReactComponents(column.json)}\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tconst renderContent = (content, images) => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<InnerContainer>\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t</InnerContainer>\n\t\t\t\t<FlexContainer>\n\t\t\t\t\t{renderImages(images)}\n\t\t\t\t\t{renderColumns(content)}\n\t\t\t\t</FlexContainer>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\treturn (\n\t\trenderContent(content, images)\n\t)\n}\n\nexport default TripleTextColumn\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\nimport { ContentContainer, VerticalSpace, FlexContainer, FlexItem, InnerContainer } from \"../styled-components/layout\"\nimport TripleTextColumn from \"../components/tripleTextColumn\"\nimport SingleTextColumn from \"../components/singleTextColumn\"\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nclass Retreat extends React.Component {\n  render() {\n    const { data } = this.props\n    const retreat = this.props.data.contentfulRetreat\n    const startDate = new Date(retreat.startDate).getDate()\n    const endDate = new Date(retreat.endDate).getDate()\n    const startMonth = monthNames[new Date(retreat.startDate).getMonth()]\n    const endMonth = monthNames[new Date(retreat.endDate).getMonth()]\n    const year = new Date(retreat.startDate).getFullYear()\n\n    const renderPhotos = retreat => {\n      if (!retreat.photos) return null\n      return (\n        <FlexContainer>\n          {retreat.photos.map(photo => {\n            return (\n              <FlexItem>\n                <Img style={{ height: '230px' }} fluid={photo.fluid} />\n              </FlexItem>\n            )\n          })}\n        </FlexContainer>\n      )\n    } \n\n    const renderTripleTextColumns = retreat => {\n      if (!retreat.tripleTextColumns) return null\n      return (\n        retreat.tripleTextColumns.map(column => <TripleTextColumn content={[column.column1, column.column2, column.column3]} title={column.title} /> )\n      )\n    }\n\n    const renderSingleTextColumns = retreat => {\n      if (!retreat.singleTextColumn) return null\n      return (\n        retreat.singleTextColumn.map(column => {\n          return (\n              <SingleTextColumn content={column.content.json} title={column.title} image={column.image} />\n          )\n        })\n      )\n    }\n\n    return (\n      <Layout>\n        <SEO title=\"Retreat\" />\n        <ContentContainer>\n          <InnerContainer>\n            <h1>{retreat.title}</h1>\n          </InnerContainer>\n          {renderPhotos(retreat)}\n          <InnerContainer>\n            <h2>{startDate} {startMonth} - {endDate} {endMonth} {year}</h2>\n          </InnerContainer>\n          <FlexContainer>\n            {renderTripleTextColumns(retreat)}\n            {renderSingleTextColumns(retreat)}\n          </FlexContainer>\n        </ContentContainer>\n      </Layout>\n    )\n  }\n}\n\nexport default Retreat\n\nexport const pageQuery = graphql`\n  query ContentfulRetreatByTitle($title: String!) {\n    contentfulRetreat( title: {eq: $title}) {\n      title\n      startDate\n      endDate\n      mainPhoto {\n        fluid {\n          ...GatsbyContentfulFluid\n        }\n      }\n      photos {\n        fluid {\n          ...GatsbyContentfulFluid\n        }\n      }\n      singleTextColumn {\n        title\n        content {\n          json\n        }\n        image {\n          fluid {\n            ...GatsbyContentfulFluid\n          }\n        }\n      }\n      tripleTextColumns {\n        title\n        column1 {\n          json\n        }\n        column2 {\n          json\n        }\n        column3 {\n          json\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}