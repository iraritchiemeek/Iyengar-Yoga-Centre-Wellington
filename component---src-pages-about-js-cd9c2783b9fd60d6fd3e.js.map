{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/tripleTextColumn.js"],"names":["About","render","page","this","props","data","contentfulPage","title","space","fluid","image","author","quote","content","tripleTextColumns","map","tripleTextColumn","column1","column2","column3","React","Component","pageQuery","TripleTextColumn","images","Fragment","renderImages","column","documentToReactComponents","json","renderColumns","renderContent"],"mappings":"yQAWMA,E,gLACJC,OAAA,WAAU,IAEFC,EADWC,KAAKC,MAAdC,KACUC,eAYlB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCACA,kBAAC,IAAD,CAAeC,MAAM,SACrB,kBAAC,IAAD,CAAcC,MAAOP,EAAKQ,MAAMD,SAElC,kBAAC,IAAD,CAAOE,OAAQT,EAAKU,MAAMD,OAAQE,QAASX,EAAKU,MAAMC,QAAQA,UAjBhEX,EAAKY,kBAAkBC,KAAI,SAAAC,GACzB,OACE,kBAAC,IAAD,CAAkBH,QAAS,CAACG,EAAiBC,QAASD,EAAiBE,QAASF,EAAiBG,SAAUZ,MAAOS,EAAiBT,c,GAT3Ha,IAAMC,WAgCXrB,YAER,IAAMsB,EAAS,c,kCC7CtB,sEA8DeC,IAzDU,SAAAnB,GAAU,IACzBS,EAA2BT,EAA3BS,QAASN,EAAkBH,EAAlBG,MAAOiB,EAAWpB,EAAXoB,OACzB,IAAKX,EAAS,OAAO,KAkDrB,OAdsB,SAACA,EAASW,GAC/B,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,IAAD,KACC,4BAAKlB,IAEN,kBAAC,IAAD,KAxCkB,SAAAiB,GACpB,OAAKA,EAIHA,EAAOT,KAAI,SAAAL,GACV,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKD,MAAOC,EAAMD,YANf,KAuCJiB,CAAaF,GAzBI,SAAAX,GACrB,GAAKA,EAEE,CAEN,OACCA,EAAQE,KAAI,SAAAY,GAEX,OACC,kBAAC,IAAD,KACEC,oCAA0BD,EAAOE,UARtC,OAAO,KAwBJC,CAAcjB,KAOlBkB,CAAclB,EAASW","file":"component---src-pages-about-js-cd9c2783b9fd60d6fd3e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport FullWidthImg from \"../components/fullWidthImg\"\nimport { ContentContainer, VerticalSpace, InnerContainer, FlexContainer } from \"../styled-components/layout\"\nimport Quote from '../components/quote'\nimport TripleTextColumn from \"../components/tripleTextColumn\"\nimport SingleTextColumn from \"../components/singleTextColumn\"\n\n\nclass About extends React.Component {\n  render() {\n    const { data } = this.props\n    const page = data.contentfulPage\n\n    const renderTripleTextColumn = () => {\n      return (\n        page.tripleTextColumns.map(tripleTextColumn => {\n          return (\n            <TripleTextColumn content={[tripleTextColumn.column1, tripleTextColumn.column2, tripleTextColumn.column3]} title={tripleTextColumn.title}></TripleTextColumn>\n          )\n        })\n      )\n    }\n\n    return (\n      <Layout>\n        <SEO title=\"Home\" />\n        <ContentContainer>\n          <InnerContainer>\n            <h1>About</h1>\n            <VerticalSpace space=\"30px\"/>\n            <FullWidthImg fluid={page.image.fluid} />\n          </InnerContainer>\n          <Quote author={page.quote.author} content={page.quote.content.content}/>\n          {renderTripleTextColumn()}\n        </ContentContainer>\n      </Layout>\n    )\n  }\n}\n\nexport default About\n\nexport const pageQuery = graphql`\n  query {\n    contentfulPage(contentful_id: {eq: \"3CVGZB1c7gS08gBRNa9P6d\"}){\n      title\n      image {\n        fluid {\n          ...GatsbyContentfulFluid\n        }\n      }\n      tripleTextColumns {\n        title\n        column1 {\n          json\n        }\n        column2 {\n          json\n        }\n        column3 {\n          json\n        }\n      }\n      quote {\n        author\n        content {\n          content\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { FlexContainer, FlexItem, TripleColumnText, VerticalSpace, InnerContainer } from '../styled-components/layout'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport Img from \"gatsby-image\"\n\nconst TripleTextColumn = props => {\n \tconst { content, title, images } = props\n\tif (!content) return null\n\n\tconst renderImages = images => {\n\t\tif (!images ) {\n\t\t\treturn null\n\t\t} else {\n\t\t\treturn (\n\t\t\t\timages.map(image => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t<Img fluid={image.fluid} />\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tconst renderColumns = content => {\n\t\tif (!content) {\n\t\t\treturn null\n\t\t} else {\n\t\t\tlet n = 0\n\t\t\treturn (\n\t\t\t\tcontent.map(column => {\n\t\t\t\t\tn++\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t{documentToReactComponents(column.json)}\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tconst renderContent = (content, images) => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<InnerContainer>\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t</InnerContainer>\n\t\t\t\t<FlexContainer>\n\t\t\t\t\t{renderImages(images)}\n\t\t\t\t\t{renderColumns(content)}\n\t\t\t\t</FlexContainer>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\treturn (\n\t\trenderContent(content, images)\n\t)\n}\n\nexport default TripleTextColumn\n"],"sourceRoot":""}